http_address="0.0.0.0:4180"
cookie_secret="OQINaROshtE9TcZkNAm-5Zs2Pv3xaWytBmc5W7sPX7w="
email_domains="*"
cookie_secure="false"
# upstreams=["http://frontend.localtest.me"]
# cookie_domains=["keycloak.localtest.me:9080", "nginx.localtest.me:8088"] # Required so cookie can be read on all subdomains.
# whitelist_domains=[".localtest.me", "keycloak.localtest.me:9080", "nginx.localtest.me:8088"] # Required to allow redirection back to original requested target.

# keycloak provider


client_secret="72341b6d-7065-4518-a0e4-50ee15025608"
client_id="oauth2-proxy"
# redirect_url="http://oauth2-proxy.localtest.me:4180/oauth2/callback"

# in this case oauth2-proxy is going to visit
# http://keycloak.localtest.me:9080/realms/oauth2-proxy/.well-known/openid-configuration for configuration
oidc_issuer_url="http://keycloak.localtest.me:9080/realms/oauth2-proxy"
insecure_oidc_allow_unverified_email="true"
provider="oidc"
provider_display_name="Keycloak"

pass_access_token="true"
pass_user_headers="true"
set_xauthrequest="true"
set_authorization_header="true"
skip_auth_preflight="true"

# backend_logout_url="http://keycloak.localtest.me:9080/realms/oauth2-proxy/protocol/openid-connect/logout"
#
redirect_url="http://oauth2-proxy.oauth2-proxy.localhost/oauth2/callback"
cookie_domains=[".oauth2-proxy.localhost"] # The protected sites must have a common parent domain. Required so cookie can be read on all subdomains.
whitelist_domains=[".oauth2-proxy.localhost", "keycloak.localtest.me:9080", "frontend.oauth2-proxy.localhost"] # Required to allow redirection back to original requested target.
# Enables the use of `X-Forwarded-*` headers to determine request correctly
reverse_proxy="true"
